===========================================================================
doctest testfile for the 2-matrix_divided.py module in the parent directory
===========================================================================

The 2-matrix_divided module contains a function, matrix_divided, that accepts
a matrix (2D list) of numbers and another number and returns a new matrix that
holds the result of dividing the corresponding element of the input matrix by
the input number.

For further information about the function, refer to its docstring in
the module.

Example of Usage
================

	Importing the function
	----------------------
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

	Valid Arguments
	---------------
	>>> matrix_divided([[]], 1)
	[[]]

	>>> matrix_divided([[1, 2, 3]], 2)
	[[0.5, 1.0, 1.5]]

	>>> matrix_divided([[0.5, 1.0, 1.5], [1.0, 1.5, 0.5]], 2)
	[[0.25, 0.5, 0.75], [0.5, 0.75, 0.25]]

	>>> matrix_divided([[0.5, 1.0, 1.5]], 0.5)
	[[1.0, 2.0, 3.0]]

	>>> matrix_divided([[2, 4, 6], [4, 6, 8], [6, 8, 10]], -2)
	[[-1.0, -2.0, -3.0], [-2.0, -3.0, -4.0], [-3.0, -4.0, -5.0]]

	>>> matrix_divided([[1, 2, 3]], 3)
	[[0.33, 0.67, 1.0]]

	Invalid Arguments
	-----------------
	>>> matrix_divided("123", 2)
	Traceback (most recent call last):
                  ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(None, 2)
	Traceback (most recent call last):
		  ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([1, 2, 3], 2)
	Traceback (most recent call last):
		  ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[[2, 4, 6]]], 2)
	Traceback (most recent call last):
                  ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([['a', 2, 1 + 2j]], 2)
	Traceback (most recent call last):
        	  ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[2, 4, 6], [8, 10]], 2)
	Traceback (most recent call last):
		  ...
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[2, 4, 6]], "5")
	Traceback (most recent call last):
		  ...
	TypeError: div must be a number

	>>> matrix_divided([[2, 4, 6]], 1 + 2j)
	Traceback (most recent call last):
		  ...
	TypeError: div must be a number

	>>> matrix_divided([[2, 4, 6]], [2])
	Traceback (most recent call last):
		  ...
	TypeError: div must be a number

	>>> matrix_divided([[2, 4, 6]], 0)
	Traceback (most recent call last):
		  ...
	ZeroDivisionError: division by zero


	Incorrect Number of Arguments
	-----------------------------
	>>> matrix_divided() # doctest: +ELLIPSIS
	Traceback (most recent call last):
                  ...
        TypeError: ...

	>>> matrix_divided([[2, 4, 6]]) # doctest: +ELLIPSIS
	Traceback (most recent call last):
                  ...
        TypeError: ...

	>>> matrix_divided([[2, 4, 6]], 2, True) # doctest: +ELLIPSIS
	Traceback (most recent call last):
                  ...
        TypeError: ...
